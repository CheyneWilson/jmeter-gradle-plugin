buildscript {
    ext {
        artifactoryUrl = System.getenv('artifactory')
    }
    repositories {
        maven { url "$artifactoryUrl/plugins-release" }
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'

apply plugin: "com.jfrog.artifactory"

repositories {
    maven {url "$artifactoryUrl/repo1"}
}

//--- Project information ---
group = 'net.foragerr.jmeter'
archivesBaseName = 'jmeter-gradle-plugin'
version = "2.0.0"



dependencies {
    // gradleApi gradleApi()
    // compile project.configurations.getByName('gradleApi')
    compile 'org.codehaus.groovy:groovy-all:2.4.10'
    compile 'org.rendersnake:rendersnake:1.8'
    compile 'kg.apc:jmeter-plugins-cmd:2.1'
    compile 'kg.apc:jmeter-plugins-synthesis:2.1'
    compile 'kg.apc:jmeter-plugins-graphs-additional:2.0'
    compile 'kg.apc:jmeter-plugins-graphs-basic:2.0'
    compile 'kg.apc:jmeter-plugins-graphs-dist:2.0'

}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

 def pomConfig = {
    scm {
        url 'scm:git@github.com:CheyneWilson/jmeter-gradle-plugin.git'
        connection 'scm:git@github.com:CheyneWilson/jmeter-gradle-plugin.git'
        developerConnection 'scm:git@github.com:CheyneWilson/jmeter-gradle-plugin.git'
    }
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'foragerr'
            name 'RaGe'
            url 'http://jmeter.foragerr.net'
            email 'foragerr@gmail.com'
            roles { role 'Developer' }
        }
        developer {
            id 'cheyne'
            name 'Cheyne Wilson'
            email ''
            roles { role 'Developer' }
        }
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            //Workaround for gradle plugin-publish defect: https://issues.gradle.org/browse/GRADLE-3274
            //since maven-publish refuses to propagate exclusions to pom, DIY. :(
            from(components.java)

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A gradle plugin for running jmeter tests')
                root.children().last() + pomConfig
            }

            artifact sourcesJar
            artifact javadocJar
        }
    }
}


artifactory {
    contextUrl = artifactoryUrl
    publish {
        repository {
            repoKey = 'libs-snapshot'
            username = System.getenv('artifactory_user')
            password = System.getenv('artifactory_api_key')
        }
        defaults {
            publications('mavenJava')
        }
    }
}

